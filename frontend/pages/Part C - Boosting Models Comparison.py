import streamlit as st
import pandas as pd
import os

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c metrics t·ª´ file hi·ªán t·∫°i
base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))
metrics_dir = os.path.join(base_dir, 'boosting_models', 'metrics')

# ƒê∆∞·ªùng d·∫´n c·ª• th·ªÉ t·ªõi c√°c file CSV
metric_files = [
    os.path.join(metrics_dir, "catboost_metrics.csv"),
    os.path.join(metrics_dir, "xgboost_metrics.csv"),
    os.path.join(metrics_dir, "lightgbm_metrics.csv")
]

# ƒê·ªçc d·ªØ li·ªáu
all_metrics = pd.concat([pd.read_csv(file) for file in metric_files], ignore_index=True)
all_metrics.set_index("model", inplace=True)

st.set_page_config(page_title="EDA", layout="wide", page_icon="‚öïÔ∏è",)
st.markdown("<h1 style='text-align: center; color: #21130d;'>So S√°nh C√°c M√¥ H√¨nh Boosting</h1>", unsafe_allow_html=True)

st.markdown("""
    <style>
    .footer {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #f0f2f6;
        color: #333;
        text-align: center;
        padding: 10px;
        font-size: 14px;
        z-index: 999;
    }
    </style>
    <div class="footer">
        ¬© 2025 Nguy·ªÖn ƒê·ª©c T√¢y | All rights reserved.
    </div>
""", unsafe_allow_html=True)

# --- B·ªë c·ª•c chia l√†m 2 c·ªôt ---
col1, col2 = st.columns([1, 1.5])  # t·ªâ l·ªá 2:1 gi·ªØa b·∫£ng v√† h√¨nh ·∫£nh

# --- C·ªòT 1: B·∫£ng v√† bar chart ---
with col1:
    st.markdown("<h3 style='text-align: center; color: #21130d;'>üìã Ch·ªâ S·ªë C·ªßa C√°c M√¥ H√¨nh</h3>",unsafe_allow_html=True)
    st.dataframe(all_metrics.style.format("{:.4f}"))

    metrics_to_plot = ["accuracy", "auc", "precision", "recall", "f1_score", "training_time"]
    selected_metric = st.selectbox("üìà Ch·ªçn ch·ªâ s·ªë ƒë·ªÉ so s√°nh", metrics_to_plot, index=0)

    st.markdown(f"<h3 style='text-align: center;'>üìä Bi·ªÉu ƒë·ªì so s√°nh {selected_metric.capitalize()}</h3>", unsafe_allow_html=True)

    st.bar_chart(all_metrics[selected_metric])

# --- C·ªòT 2: Feature Importance ---
with col2:
    st.markdown("<h3 style='text-align: center; color: #21130d;'>üß† Feature Importance</h3>", unsafe_allow_html=True)

    models = ["CatBoost", "XGBoost", "LightGBM"]
    model_to_filename = {
        "CatBoost": "catboost_feature_importance.png",
        "XGBoost": "xgboost_feature_importance.png",
        "LightGBM": "lightgbm_feature_importance.png"
    }

    selected_model = st.selectbox("Ch·ªçn m√¥ h√¨nh", models, index=0)

    feature_plot_path = os.path.join(metrics_dir, model_to_filename[selected_model])
    if os.path.exists(feature_plot_path):
        st.image(feature_plot_path, caption=f"{selected_model} Feature Importance", use_container_width=True)
    else:
        st.warning(f"Kh√¥ng t√¨m th·∫•y h√¨nh ·∫£nh cho {selected_model}.")
